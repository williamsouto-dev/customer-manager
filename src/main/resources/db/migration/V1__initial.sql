--=-=-=-=-=-=-= CREATE TABLES =-=-=-=-=-=-=--


--=-=-=-=-=-=-= TABLE ADDRESS =-=-=-=-=-=-=--

CREATE TABLE IF NOT EXISTS ADDRESS (
     IDT_ADDRESS SERIAL NOT NULL,
     DES_STREET VARCHAR(100) NOT NULL,
     NUM_HOUSE INT NOT NULL,
     DES_DISTRICT VARCHAR(30) NOT NULL,
     DES_CITY VARCHAR(30) NOT NULL,
     DES_STATE VARCHAR(30) NOT NULL,
     DAT_CREATE TIMESTAMP NOT NULL,
     DAT_UPDATE TIMESTAMP
);

ALTER TABLE ADDRESS ADD CONSTRAINT addresspk PRIMARY KEY (IDT_ADDRESS);

COMMENT ON TABLE ADDRESS IS 'Tabela de endereços';
COMMENT ON COLUMN ADDRESS.IDT_ADDRESS IS 'Identificação única do endereço';
COMMENT ON COLUMN ADDRESS.DES_STREET IS 'Nome da rua';
COMMENT ON COLUMN ADDRESS.NUM_HOUSE IS 'Número da casa';
COMMENT ON COLUMN ADDRESS.DES_DISTRICT IS 'Nome do bairro';
COMMENT ON COLUMN ADDRESS.DES_CITY IS 'Nome da cidade';
COMMENT ON COLUMN ADDRESS.DES_STATE IS 'Nome do estado';
COMMENT ON COLUMN ADDRESS.DAT_CREATE IS 'Data de criação do registro';
COMMENT ON COLUMN ADDRESS.DAT_UPDATE IS 'Data de atualização do registro';

--=-=-=-=-=-=-= TABLE CUSTOMER =-=-=-=-=-=-=--

CREATE TABLE IF NOT EXISTS CUSTOMER (
    IDT_CUSTOMER SERIAL NOT NULL,
    DES_NAME VARCHAR(50) NOT NULL,
    DES_FULLNAME VARCHAR(250) NOT NULL,
    DES_GENRE VARCHAR(20),
    DAT_BIRTH TIMESTAMP NOT NULL,
    DES_EDUCATIONAL_LEVEL VARCHAR(30) NOT NULL,
    DES_MOTHER_NAME VARCHAR(50) NOT NULL,
    DES_PHONE VARCHAR(50) NOT NULL,
    DOCUMENT VARCHAR(250) NOT NULL,
    DES_STATUS VARCHAR(15) NOT NULL,
    IDT_ADDRESS INT NOT NULL,
    DAT_CREATE TIMESTAMP NOT NULL,
    DAT_UPDATE TIMESTAMP
);

ALTER TABLE CUSTOMER ADD CONSTRAINT customerpk PRIMARY KEY (IDT_CUSTOMER);
ALTER TABLE CUSTOMER ADD CONSTRAINT customeraddressfk FOREIGN KEY (IDT_ADDRESS) REFERENCES ADDRESS(IDT_ADDRESS);

COMMENT ON TABLE CUSTOMER IS 'Tabela de Usuário';
COMMENT ON COLUMN CUSTOMER.IDT_CUSTOMER IS 'Identificação única do usuário';
COMMENT ON COLUMN CUSTOMER.DES_NAME IS 'Primeiro nome do cliente';
COMMENT ON COLUMN CUSTOMER.DES_FULLNAME IS 'Nome completo do cliente';
COMMENT ON COLUMN CUSTOMER.DES_GENRE IS 'Genero';
COMMENT ON COLUMN CUSTOMER.DAT_BIRTH IS 'Data de Nascimento';
COMMENT ON COLUMN CUSTOMER.DES_EDUCATIONAL_LEVEL IS 'Nível da formação escolar';
COMMENT ON COLUMN CUSTOMER.DES_MOTHER_NAME IS 'Nome completo da mãe';
COMMENT ON COLUMN CUSTOMER.DES_PHONE IS 'Telefone de contato';
COMMENT ON COLUMN CUSTOMER.DOCUMENT IS 'Documento do cliente criptografado(CPF/CNPJ/RG)';
COMMENT ON COLUMN CUSTOMER.DES_STATUS IS 'Situação do usuário';
COMMENT ON COLUMN CUSTOMER.IDT_ADDRESS IS 'Código identificador do endereço';
COMMENT ON COLUMN CUSTOMER.DAT_CREATE IS 'Data de criação do registro';
COMMENT ON COLUMN CUSTOMER.DAT_UPDATE IS 'Data de atualização do registro';

--=-=-=-=-=-=-= TABLE ACCOUNT =-=-=-=-=-=-=--

CREATE TABLE IF NOT EXISTS ACCOUNT (
     IDT_ACCOUNT SERIAL NOT NULL,
     DES_TYPE VARCHAR(5) NOT NULL,
     DES_USERNAME VARCHAR(50) NOT NULL,
     COD_PASSWORD VARCHAR(250) NOT NULL,
     DES_EMAIL VARCHAR(50) NOT NULL,
     FLG_ACTIVE BOOLEAN DEFAULT TRUE,
     IDT_CUSTOMER INT NOT NULL,
     DAT_CREATE TIMESTAMP NOT NULL,
     DAT_UPDATE TIMESTAMP
);

ALTER TABLE ACCOUNT ADD CONSTRAINT accountpk PRIMARY KEY (IDT_ACCOUNT);
ALTER TABLE ACCOUNT ADD CONSTRAINT accountcustomerfk FOREIGN KEY (IDT_CUSTOMER) REFERENCES CUSTOMER(IDT_CUSTOMER);

COMMENT ON TABLE ACCOUNT IS 'Tabela de contas';
COMMENT ON COLUMN ACCOUNT.IDT_ACCOUNT IS 'Identificação única da conta';
COMMENT ON COLUMN ACCOUNT.DES_TYPE IS 'Tipo da contaa(PF\PJ)';
COMMENT ON COLUMN ACCOUNT.DES_USERNAME IS 'Usuario de acesso';
COMMENT ON COLUMN ACCOUNT.COD_PASSWORD IS 'Senha de acesso criptografada';
COMMENT ON COLUMN ACCOUNT.DES_EMAIL IS 'E-mail vinculado a conta';
COMMENT ON COLUMN ACCOUNT.FLG_ACTIVE IS 'Indicador se a conta esta ativa';
COMMENT ON COLUMN ACCOUNT.IDT_CUSTOMER IS 'Código identificador do cliente';
COMMENT ON COLUMN ACCOUNT.DAT_CREATE IS 'Data de criação do registro';
COMMENT ON COLUMN ACCOUNT.DAT_UPDATE IS 'Data de atualização do registro';
